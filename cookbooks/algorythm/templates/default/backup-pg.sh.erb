#!/bin/bash
########################################################################
# Usage: backup-pg.sh {dump DATABASE FILE|restore DATABASE FILE OWNER} #
# Must be run as root                                                  #
########################################################################

if [ $(id -u) != '0' ]; then
	echo 'You need root privileges to run this script' 2>&1
	exit 1
fi

SCRIPT_NAME="$0"
ACTION="$1"
DATABASE="$2"
SQL_FILE="$3"
DB_OWNER="$4"

case "$ACTION" in
	dump|restore)
	;;
	*)
		echo "Usage: $SCRIPT_NAME {dump DATABASE FILE|restore DATABASE FILE OWNER}"
		exit 1
	;;
esac

if [ -z "$DATABASE" ] || [ -z "$SQL_FILE" ]; then
	echo "Usage: $SCRIPT_NAME {dump DATABASE FILE|restore DATABASE FILE OWNER}"
	exit 1
fi



case "$ACTION" in
	dump)
		su postgres -c "pg_dump \"$DATABASE\" > \"$SQL_FILE\""
	;;
	restore)
		if [ -z "$DB_OWNER" ]; then
			echo "Usage: $SCRIPT_NAME restore DATABASE FILE OWNER"
			exit 1
		fi
		
		su postgres -c "dropdb \"$DATABASE\"" >> /dev/null
		su postgres -c "createdb \"$DATABASE\" -O \"$DB_OWNER\"" &&
		su postgres -c "psql -1 \"$DATABASE\" < \"$SQL_FILE\""
	;;
esac
