#!/bin/bash
if [ -z "$LIFERAY_HOME" ]; then
	LIFERAY_HOME='<%=@home%>'
fi
if [ -z "$LIFERAY_USER" ]; then
	LIFERAY_USER='<%=@user%>'
fi
CFG_FILE="$LIFERAY_HOME/portal-ext.properties"

function backupLiferayDBs {
	for SHARD in $(cat $CFG_FILE | grep -P '^jdbc\.[^\.]+\.url='); do
		SHARD_NAME=$(echo $SHARD | grep -Po '(?<=^jdbc\.)[^\.]+')
		SHARD_DB=$(echo $SHARD | grep -Po '[^/]+$')
		SHARD_DB_USER=$(cat $CFG_FILE | grep -Po "(?<=^jdbc\.$SHARD_NAME\.username=).*")

		if [ -z "$SHARD_NAME" ] || [ -z "$SHARD_DB" ] || [ -z "$SHARD_DB_USER" ]; then
			echo "! Invalid shard configuration at shard '$SHARD'. Check $CFG_FILE"
			return 1
		fi

		backupPostgreDB "$SHARD_DB" "sql/$SHARD_DB.sql" "$SHARD_DB_USER"

		STATUS=$?

		if [ $STATUS != '0' ]; then
			return 1
		fi
	done
}

function liferayBackup {
	backupLiferayDBs &&
	backupDirectory "$LIFERAY_HOME/data" 'data'                  "$LIFERAY_USER:$LIFERAY_USER" &&
	backupFile      "$CFG_FILE"          'portal-ext.properties' "$LIFERAY_USER:$LIFERAY_USER"
}

case "$ACTION" in
	dump)
		liferayBackup
	;;
	restore)
		serviceWrapper liferay stop &&
		liferayBackup &&
		serviceWrapper liferay start
	;;
	*)
		echo "Usage: $0 {dump|restore} DIRECTORY"
		exit 1
	;;
esac
