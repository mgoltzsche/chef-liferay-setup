#!/bin/bash
### BEGIN INIT INFO
# Provides: liferay
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Should-Start: $named
# Should-Stop: $named
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Liferay portal daemon.
# Description: Starts the Liferay portal.
### END INIT INFO

if [ $(id -u) != '0' ]; then
	echo 'You need root privileges to run this script'
	exit 1
fi

APP_NAME="Liferay"
USER=<%=@user%>
export CATALINA_HOME="<%=@liferayDir%>"
export CATALINA_PID=/var/run/liferay.pid
export LIFERAY_HOME="<%=@liferayHomeDir%>"
SHUTDOWN_TIMEOUT=45
SHUTDOWN_CHECK_INTERVAL=5

#verify that the user that will run the daemon exists
id "$USER" > /dev/null 2>&1
if [ $? != '0' ]; then
	echo "User $USER does not exist!" 2>&1
	exit 1
fi

function start {
	echo "* Starting $APP_NAME"

	mkdir $CATALINA_HOME/work 2> /dev/null
	rm -rf "$CATALINA_HOME/temp/*" 2> /dev/null
	mkdir $CATALINA_HOME/temp 2> /dev/null
	touch $CATALINA_PID 2> /dev/null
	chmod ugo=rw "$CATALINA_PID"

	su $USER -c "$CATALINA_HOME/bin/catalina.sh start" >> /dev/null
	status=$?

	if [ $status = 0 ]; then
		echo '  ...done'
	else
		echo '  ...failed' 2>&1
	fi

	return $status
}

function stop {
	echo "* Stopping $APP_NAME"

	if [ ! -f $CATALINA_PID ] || [ ! -s $CATALINA_PID ]; then
		echo "  ...failed: $APP_NAME is not running or pid file $CATALINA_PID is missing or empty!" 2>&1
		return 1
	fi

	pid=$(cat $CATALINA_PID)
	waited_time=0

	su $USER -c "$CATALINA_HOME/bin/catalina.sh stop" | grep 'java.net.ConnectException:' &>> /dev/null
	GREP_ERROR_STATUS=$?
	
	if [ $GREP_ERROR_STATUS = '0' ]; then
		echo '  ...Killing process since it does not listen (maybe not yet booted)'
		kill -9 $pid
	fi

	until [ $(ps -p $pid | grep -c $pid) = 0 ] || [ $waited_time -ge $SHUTDOWN_TIMEOUT ]; do
		echo "  ...Waiting for process to exit. Timeout: $waited_time/$SHUTDOWN_TIMEOUT"
		sleep $SHUTDOWN_CHECK_INTERVAL
		waited_time=$(expr $waited_time + $SHUTDOWN_CHECK_INTERVAL);
	done

	if [ $waited_time -ge $SHUTDOWN_TIMEOUT ]; then
		echo "  ...Killing process after a timeout of $SHUTDOWN_TIMEOUT seconds"
		kill -9 $pid
	fi

	rm -f "$CATALINA_PID"

	echo '  ...done'
}

function restart {
	stop
	start
}

function status {
  if [ -f "$CATALINA_PID" ]; then
    echo "$APP_NAME is running with pid $(cat $CATALINA_PID)"
  else
    echo "$APP_NAME is not running (or $CATALINA_PID is missing)"
  fi
}

case "$1" in
    start|stop|restart|status)
        $1
    ;;
    *)
        echo $"Usage: service liferay {start|stop|restart|status}"
        exit 1
    ;;
esac
